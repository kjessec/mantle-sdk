// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// TxSignature tx signature
//
// swagger:model TxSignature
type TxSignature struct {

	// account number
	AccountNumber string `json:"account_number,omitempty"`

	// pub key
	PubKey *TxSignaturePubKey `json:"pub_key,omitempty"`

	// sequence
	Sequence string `json:"sequence,omitempty"`

	// signature
	Signature string `json:"signature,omitempty"`
}

// Validate validates this tx signature
func (m *TxSignature) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePubKey(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *TxSignature) validatePubKey(formats strfmt.Registry) error {

	if swag.IsZero(m.PubKey) { // not required
		return nil
	}

	if m.PubKey != nil {
		if err := m.PubKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("pub_key")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *TxSignature) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TxSignature) UnmarshalBinary(b []byte) error {
	var res TxSignature
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

// TxSignaturePubKey tx signature pub key
//
// swagger:model TxSignaturePubKey
type TxSignaturePubKey struct {

	// type
	Type string `json:"type,omitempty"`

	// value
	Value interface{} `json:"value,omitempty"`
}

// Validate validates this tx signature pub key
func (m *TxSignaturePubKey) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *TxSignaturePubKey) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *TxSignaturePubKey) UnmarshalBinary(b []byte) error {
	var res TxSignaturePubKey
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
