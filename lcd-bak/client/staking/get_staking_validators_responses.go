// Code generated by go-swagger; DO NOT EDIT.

package staking

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/terra-project/mantle-sdk/lcd/models"
)

// GetStakingValidatorsReader is a Reader for the GetStakingValidators structure.
type GetStakingValidatorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetStakingValidatorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetStakingValidatorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 500:
		result := NewGetStakingValidatorsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetStakingValidatorsOK creates a GetStakingValidatorsOK with default headers values
func NewGetStakingValidatorsOK() *GetStakingValidatorsOK {
	return &GetStakingValidatorsOK{}
}

/*GetStakingValidatorsOK handles this case with default header values.

OK
*/
type GetStakingValidatorsOK struct {
	Payload *GetStakingValidatorsOKBody
}

func (o *GetStakingValidatorsOK) Error() string {
	return fmt.Sprintf("[GET /staking/validators][%d] getStakingValidatorsOK  %+v", 200, o.Payload)
}

func (o *GetStakingValidatorsOK) GetPayload() *GetStakingValidatorsOKBody {
	return o.Payload
}

func (o *GetStakingValidatorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetStakingValidatorsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetStakingValidatorsInternalServerError creates a GetStakingValidatorsInternalServerError with default headers values
func NewGetStakingValidatorsInternalServerError() *GetStakingValidatorsInternalServerError {
	return &GetStakingValidatorsInternalServerError{}
}

/*GetStakingValidatorsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetStakingValidatorsInternalServerError struct {
}

func (o *GetStakingValidatorsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /staking/validators][%d] getStakingValidatorsInternalServerError ", 500)
}

func (o *GetStakingValidatorsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetStakingValidatorsOKBody get staking validators o k body
swagger:model GetStakingValidatorsOKBody
*/
type GetStakingValidatorsOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result []*models.Validator `json:"result"`
}

// Validate validates this get staking validators o k body
func (o *GetStakingValidatorsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetStakingValidatorsOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	for i := 0; i < len(o.Result); i++ {
		if swag.IsZero(o.Result[i]) { // not required
			continue
		}

		if o.Result[i] != nil {
			if err := o.Result[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getStakingValidatorsOK" + "." + "result" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetStakingValidatorsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetStakingValidatorsOKBody) UnmarshalBinary(b []byte) error {
	var res GetStakingValidatorsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
