// Code generated by go-swagger; DO NOT EDIT.

package slashing

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/terra-project/mantle-sdk/lcd/models"
)

// PostSlashingValidatorsValidatorAddrUnjailReader is a Reader for the PostSlashingValidatorsValidatorAddrUnjail structure.
type PostSlashingValidatorsValidatorAddrUnjailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSlashingValidatorsValidatorAddrUnjailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostSlashingValidatorsValidatorAddrUnjailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSlashingValidatorsValidatorAddrUnjailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostSlashingValidatorsValidatorAddrUnjailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostSlashingValidatorsValidatorAddrUnjailOK creates a PostSlashingValidatorsValidatorAddrUnjailOK with default headers values
func NewPostSlashingValidatorsValidatorAddrUnjailOK() *PostSlashingValidatorsValidatorAddrUnjailOK {
	return &PostSlashingValidatorsValidatorAddrUnjailOK{}
}

/*PostSlashingValidatorsValidatorAddrUnjailOK handles this case with default header values.

Tx was successfully generated
*/
type PostSlashingValidatorsValidatorAddrUnjailOK struct {
	Payload *models.BroadcastTxCommitResult
}

func (o *PostSlashingValidatorsValidatorAddrUnjailOK) Error() string {
	return fmt.Sprintf("[POST /slashing/validators/{validatorAddr}/unjail][%d] postSlashingValidatorsValidatorAddrUnjailOK  %+v", 200, o.Payload)
}

func (o *PostSlashingValidatorsValidatorAddrUnjailOK) GetPayload() *models.BroadcastTxCommitResult {
	return o.Payload
}

func (o *PostSlashingValidatorsValidatorAddrUnjailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BroadcastTxCommitResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSlashingValidatorsValidatorAddrUnjailBadRequest creates a PostSlashingValidatorsValidatorAddrUnjailBadRequest with default headers values
func NewPostSlashingValidatorsValidatorAddrUnjailBadRequest() *PostSlashingValidatorsValidatorAddrUnjailBadRequest {
	return &PostSlashingValidatorsValidatorAddrUnjailBadRequest{}
}

/*PostSlashingValidatorsValidatorAddrUnjailBadRequest handles this case with default header values.

Invalid validator address or base_req
*/
type PostSlashingValidatorsValidatorAddrUnjailBadRequest struct {
}

func (o *PostSlashingValidatorsValidatorAddrUnjailBadRequest) Error() string {
	return fmt.Sprintf("[POST /slashing/validators/{validatorAddr}/unjail][%d] postSlashingValidatorsValidatorAddrUnjailBadRequest ", 400)
}

func (o *PostSlashingValidatorsValidatorAddrUnjailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostSlashingValidatorsValidatorAddrUnjailInternalServerError creates a PostSlashingValidatorsValidatorAddrUnjailInternalServerError with default headers values
func NewPostSlashingValidatorsValidatorAddrUnjailInternalServerError() *PostSlashingValidatorsValidatorAddrUnjailInternalServerError {
	return &PostSlashingValidatorsValidatorAddrUnjailInternalServerError{}
}

/*PostSlashingValidatorsValidatorAddrUnjailInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostSlashingValidatorsValidatorAddrUnjailInternalServerError struct {
}

func (o *PostSlashingValidatorsValidatorAddrUnjailInternalServerError) Error() string {
	return fmt.Sprintf("[POST /slashing/validators/{validatorAddr}/unjail][%d] postSlashingValidatorsValidatorAddrUnjailInternalServerError ", 500)
}

func (o *PostSlashingValidatorsValidatorAddrUnjailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostSlashingValidatorsValidatorAddrUnjailBody post slashing validators validator addr unjail body
swagger:model PostSlashingValidatorsValidatorAddrUnjailBody
*/
type PostSlashingValidatorsValidatorAddrUnjailBody struct {

	// base req
	BaseReq *models.StdTx `json:"base_req,omitempty"`
}

// Validate validates this post slashing validators validator addr unjail body
func (o *PostSlashingValidatorsValidatorAddrUnjailBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostSlashingValidatorsValidatorAddrUnjailBody) validateBaseReq(formats strfmt.Registry) error {

	if swag.IsZero(o.BaseReq) { // not required
		return nil
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("UnjailBody" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostSlashingValidatorsValidatorAddrUnjailBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostSlashingValidatorsValidatorAddrUnjailBody) UnmarshalBinary(b []byte) error {
	var res PostSlashingValidatorsValidatorAddrUnjailBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
