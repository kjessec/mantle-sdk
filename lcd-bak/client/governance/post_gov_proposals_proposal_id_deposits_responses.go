// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/terra-project/mantle-sdk/lcd/models"
)

// PostGovProposalsProposalIDDepositsReader is a Reader for the PostGovProposalsProposalIDDeposits structure.
type PostGovProposalsProposalIDDepositsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGovProposalsProposalIDDepositsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostGovProposalsProposalIDDepositsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostGovProposalsProposalIDDepositsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostGovProposalsProposalIDDepositsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostGovProposalsProposalIDDepositsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGovProposalsProposalIDDepositsOK creates a PostGovProposalsProposalIDDepositsOK with default headers values
func NewPostGovProposalsProposalIDDepositsOK() *PostGovProposalsProposalIDDepositsOK {
	return &PostGovProposalsProposalIDDepositsOK{}
}

/*PostGovProposalsProposalIDDepositsOK handles this case with default header values.

OK
*/
type PostGovProposalsProposalIDDepositsOK struct {
	Payload *models.BroadcastTxCommitResult
}

func (o *PostGovProposalsProposalIDDepositsOK) Error() string {
	return fmt.Sprintf("[POST /gov/proposals/{proposalId}/deposits][%d] postGovProposalsProposalIdDepositsOK  %+v", 200, o.Payload)
}

func (o *PostGovProposalsProposalIDDepositsOK) GetPayload() *models.BroadcastTxCommitResult {
	return o.Payload
}

func (o *PostGovProposalsProposalIDDepositsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BroadcastTxCommitResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGovProposalsProposalIDDepositsBadRequest creates a PostGovProposalsProposalIDDepositsBadRequest with default headers values
func NewPostGovProposalsProposalIDDepositsBadRequest() *PostGovProposalsProposalIDDepositsBadRequest {
	return &PostGovProposalsProposalIDDepositsBadRequest{}
}

/*PostGovProposalsProposalIDDepositsBadRequest handles this case with default header values.

Invalid proposal id or deposit body
*/
type PostGovProposalsProposalIDDepositsBadRequest struct {
}

func (o *PostGovProposalsProposalIDDepositsBadRequest) Error() string {
	return fmt.Sprintf("[POST /gov/proposals/{proposalId}/deposits][%d] postGovProposalsProposalIdDepositsBadRequest ", 400)
}

func (o *PostGovProposalsProposalIDDepositsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostGovProposalsProposalIDDepositsUnauthorized creates a PostGovProposalsProposalIDDepositsUnauthorized with default headers values
func NewPostGovProposalsProposalIDDepositsUnauthorized() *PostGovProposalsProposalIDDepositsUnauthorized {
	return &PostGovProposalsProposalIDDepositsUnauthorized{}
}

/*PostGovProposalsProposalIDDepositsUnauthorized handles this case with default header values.

Key password is wrong
*/
type PostGovProposalsProposalIDDepositsUnauthorized struct {
}

func (o *PostGovProposalsProposalIDDepositsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /gov/proposals/{proposalId}/deposits][%d] postGovProposalsProposalIdDepositsUnauthorized ", 401)
}

func (o *PostGovProposalsProposalIDDepositsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostGovProposalsProposalIDDepositsInternalServerError creates a PostGovProposalsProposalIDDepositsInternalServerError with default headers values
func NewPostGovProposalsProposalIDDepositsInternalServerError() *PostGovProposalsProposalIDDepositsInternalServerError {
	return &PostGovProposalsProposalIDDepositsInternalServerError{}
}

/*PostGovProposalsProposalIDDepositsInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostGovProposalsProposalIDDepositsInternalServerError struct {
}

func (o *PostGovProposalsProposalIDDepositsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /gov/proposals/{proposalId}/deposits][%d] postGovProposalsProposalIdDepositsInternalServerError ", 500)
}

func (o *PostGovProposalsProposalIDDepositsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostGovProposalsProposalIDDepositsBody post gov proposals proposal ID deposits body
swagger:model PostGovProposalsProposalIDDepositsBody
*/
type PostGovProposalsProposalIDDepositsBody struct {

	// amount
	Amount []*models.Coin `json:"amount"`

	// base req
	BaseReq *models.BaseReq `json:"base_req,omitempty"`

	// depositor
	Depositor models.Address `json:"depositor,omitempty"`
}

// Validate validates this post gov proposals proposal ID deposits body
func (o *PostGovProposalsProposalIDDepositsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAmount(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateDepositor(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostGovProposalsProposalIDDepositsBody) validateAmount(formats strfmt.Registry) error {

	if swag.IsZero(o.Amount) { // not required
		return nil
	}

	for i := 0; i < len(o.Amount); i++ {
		if swag.IsZero(o.Amount[i]) { // not required
			continue
		}

		if o.Amount[i] != nil {
			if err := o.Amount[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("post_deposit_body" + "." + "amount" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostGovProposalsProposalIDDepositsBody) validateBaseReq(formats strfmt.Registry) error {

	if swag.IsZero(o.BaseReq) { // not required
		return nil
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("post_deposit_body" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

func (o *PostGovProposalsProposalIDDepositsBody) validateDepositor(formats strfmt.Registry) error {

	if swag.IsZero(o.Depositor) { // not required
		return nil
	}

	if err := o.Depositor.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("post_deposit_body" + "." + "depositor")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostGovProposalsProposalIDDepositsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostGovProposalsProposalIDDepositsBody) UnmarshalBinary(b []byte) error {
	var res PostGovProposalsProposalIDDepositsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
