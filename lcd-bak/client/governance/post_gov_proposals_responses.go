// Code generated by go-swagger; DO NOT EDIT.

package governance

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/terra-project/mantle-sdk/lcd/models"
)

// PostGovProposalsReader is a Reader for the PostGovProposals structure.
type PostGovProposalsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostGovProposalsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostGovProposalsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostGovProposalsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostGovProposalsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostGovProposalsOK creates a PostGovProposalsOK with default headers values
func NewPostGovProposalsOK() *PostGovProposalsOK {
	return &PostGovProposalsOK{}
}

/*PostGovProposalsOK handles this case with default header values.

Tx was successfully generated
*/
type PostGovProposalsOK struct {
	Payload *models.StdTx
}

func (o *PostGovProposalsOK) Error() string {
	return fmt.Sprintf("[POST /gov/proposals][%d] postGovProposalsOK  %+v", 200, o.Payload)
}

func (o *PostGovProposalsOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *PostGovProposalsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostGovProposalsBadRequest creates a PostGovProposalsBadRequest with default headers values
func NewPostGovProposalsBadRequest() *PostGovProposalsBadRequest {
	return &PostGovProposalsBadRequest{}
}

/*PostGovProposalsBadRequest handles this case with default header values.

Invalid proposal body
*/
type PostGovProposalsBadRequest struct {
}

func (o *PostGovProposalsBadRequest) Error() string {
	return fmt.Sprintf("[POST /gov/proposals][%d] postGovProposalsBadRequest ", 400)
}

func (o *PostGovProposalsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostGovProposalsInternalServerError creates a PostGovProposalsInternalServerError with default headers values
func NewPostGovProposalsInternalServerError() *PostGovProposalsInternalServerError {
	return &PostGovProposalsInternalServerError{}
}

/*PostGovProposalsInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostGovProposalsInternalServerError struct {
}

func (o *PostGovProposalsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /gov/proposals][%d] postGovProposalsInternalServerError ", 500)
}

func (o *PostGovProposalsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*PostGovProposalsBody post gov proposals body
swagger:model PostGovProposalsBody
*/
type PostGovProposalsBody struct {

	// base req
	BaseReq *models.BaseReq `json:"base_req,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// initial deposit
	InitialDeposit []*models.Coin `json:"initial_deposit"`

	// proposal type
	ProposalType string `json:"proposal_type,omitempty"`

	// proposer
	Proposer models.Address `json:"proposer,omitempty"`

	// title
	Title string `json:"title,omitempty"`
}

// Validate validates this post gov proposals body
func (o *PostGovProposalsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateBaseReq(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateInitialDeposit(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProposer(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *PostGovProposalsBody) validateBaseReq(formats strfmt.Registry) error {

	if swag.IsZero(o.BaseReq) { // not required
		return nil
	}

	if o.BaseReq != nil {
		if err := o.BaseReq.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("post_proposal_body" + "." + "base_req")
			}
			return err
		}
	}

	return nil
}

func (o *PostGovProposalsBody) validateInitialDeposit(formats strfmt.Registry) error {

	if swag.IsZero(o.InitialDeposit) { // not required
		return nil
	}

	for i := 0; i < len(o.InitialDeposit); i++ {
		if swag.IsZero(o.InitialDeposit[i]) { // not required
			continue
		}

		if o.InitialDeposit[i] != nil {
			if err := o.InitialDeposit[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("post_proposal_body" + "." + "initial_deposit" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *PostGovProposalsBody) validateProposer(formats strfmt.Registry) error {

	if swag.IsZero(o.Proposer) { // not required
		return nil
	}

	if err := o.Proposer.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("post_proposal_body" + "." + "proposer")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *PostGovProposalsBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *PostGovProposalsBody) UnmarshalBinary(b []byte) error {
	var res PostGovProposalsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
