// Code generated by go-swagger; DO NOT EDIT.

package authorization

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// New creates a new authorization API client.
func New(transport runtime.ClientTransport, formats strfmt.Registry) ClientService {
	return &Client{transport: transport, formats: formats}
}

/*
Client for authorization API
*/
type Client struct {
	transport runtime.ClientTransport
	formats   strfmt.Registry
}

// ClientService is the interface for Client methods
type ClientService interface {
	GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrants(params *GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsParams) (*GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsOK, error)

	GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType(params *GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeParams) (*GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeOK, error)

	PostMsgauthExecute(params *PostMsgauthExecuteParams) (*PostMsgauthExecuteOK, error)

	PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType(params *PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeParams) (*PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeOK, error)

	PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevoke(params *PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevokeParams) (*PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevokeOK, error)

	SetTransport(transport runtime.ClientTransport)
}

/*
  GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrants gets all grants between the granter and the grantee
*/
func (a *Client) GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrants(params *GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsParams) (*GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrants",
		Method:             "GET",
		PathPattern:        "/msgauth/granters/{granterAddress}/grantees/{granteeAddress}/grants",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrants: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType gets grant about a specific msg type between the granter and the grantee
*/
func (a *Client) GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType(params *GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeParams) (*GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewGetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType",
		Method:             "GET",
		PathPattern:        "/msgauth/granters/{granterAddress}/grantees/{granteeAddress}/grants/{msgType}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for GetMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostMsgauthExecute executes msgs from grantee address
*/
func (a *Client) PostMsgauthExecute(params *PostMsgauthExecuteParams) (*PostMsgauthExecuteOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostMsgauthExecuteParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostMsgauthExecute",
		Method:             "POST",
		PathPattern:        "/msgauth/execute",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostMsgauthExecuteReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostMsgauthExecuteOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostMsgauthExecute: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType grants msg execute permission to grantee address
*/
func (a *Client) PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType(params *PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeParams) (*PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType",
		Method:             "POST",
		PathPattern:        "/msgauth/granters/{granterAddress}/grantees/{granteeAddress}/grants/{msgType}",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgType: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

/*
  PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevoke revokes grant from grantee address
*/
func (a *Client) PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevoke(params *PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevokeParams) (*PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevokeOK, error) {
	// TODO: Validate the params before sending
	if params == nil {
		params = NewPostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevokeParams()
	}

	result, err := a.transport.Submit(&runtime.ClientOperation{
		ID:                 "PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevoke",
		Method:             "POST",
		PathPattern:        "/msgauth/granters/{granterAddress}/grantees/{granteeAddress}/grants/{msgType}/revoke",
		ProducesMediaTypes: []string{"application/json"},
		ConsumesMediaTypes: []string{"application/json"},
		Schemes:            []string{"https"},
		Params:             params,
		Reader:             &PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevokeReader{formats: a.formats},
		Context:            params.Context,
		Client:             params.HTTPClient,
	})
	if err != nil {
		return nil, err
	}
	success, ok := result.(*PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevokeOK)
	if ok {
		return success, nil
	}
	// unexpected success response
	// safeguard: normally, absent a default response, unknown success responses return an error above: so this is a codegen issue
	msg := fmt.Sprintf("unexpected success response for PostMsgauthGrantersGranterAddressGranteesGranteeAddressGrantsMsgTypeRevoke: API contract not enforced by server. Client expected to get an error, but got: %T", result)
	panic(msg)
}

// SetTransport changes the transport on the client
func (a *Client) SetTransport(transport runtime.ClientTransport) {
	a.transport = transport
}
