// Code generated by go-swagger; DO NOT EDIT.

package oracle

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/terra-project/mantle-sdk/lcd/models"
)

// PostOracleDenomsDenomPrevotesReader is a Reader for the PostOracleDenomsDenomPrevotes structure.
type PostOracleDenomsDenomPrevotesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostOracleDenomsDenomPrevotesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPostOracleDenomsDenomPrevotesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostOracleDenomsDenomPrevotesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostOracleDenomsDenomPrevotesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostOracleDenomsDenomPrevotesOK creates a PostOracleDenomsDenomPrevotesOK with default headers values
func NewPostOracleDenomsDenomPrevotesOK() *PostOracleDenomsDenomPrevotesOK {
	return &PostOracleDenomsDenomPrevotesOK{}
}

/*PostOracleDenomsDenomPrevotesOK handles this case with default header values.

OK
*/
type PostOracleDenomsDenomPrevotesOK struct {
	Payload *models.StdTx
}

func (o *PostOracleDenomsDenomPrevotesOK) Error() string {
	return fmt.Sprintf("[POST /oracle/denoms/{denom}/prevotes][%d] postOracleDenomsDenomPrevotesOK  %+v", 200, o.Payload)
}

func (o *PostOracleDenomsDenomPrevotesOK) GetPayload() *models.StdTx {
	return o.Payload
}

func (o *PostOracleDenomsDenomPrevotesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.StdTx)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostOracleDenomsDenomPrevotesBadRequest creates a PostOracleDenomsDenomPrevotesBadRequest with default headers values
func NewPostOracleDenomsDenomPrevotesBadRequest() *PostOracleDenomsDenomPrevotesBadRequest {
	return &PostOracleDenomsDenomPrevotesBadRequest{}
}

/*PostOracleDenomsDenomPrevotesBadRequest handles this case with default header values.

Bad request
*/
type PostOracleDenomsDenomPrevotesBadRequest struct {
}

func (o *PostOracleDenomsDenomPrevotesBadRequest) Error() string {
	return fmt.Sprintf("[POST /oracle/denoms/{denom}/prevotes][%d] postOracleDenomsDenomPrevotesBadRequest ", 400)
}

func (o *PostOracleDenomsDenomPrevotesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostOracleDenomsDenomPrevotesInternalServerError creates a PostOracleDenomsDenomPrevotesInternalServerError with default headers values
func NewPostOracleDenomsDenomPrevotesInternalServerError() *PostOracleDenomsDenomPrevotesInternalServerError {
	return &PostOracleDenomsDenomPrevotesInternalServerError{}
}

/*PostOracleDenomsDenomPrevotesInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostOracleDenomsDenomPrevotesInternalServerError struct {
}

func (o *PostOracleDenomsDenomPrevotesInternalServerError) Error() string {
	return fmt.Sprintf("[POST /oracle/denoms/{denom}/prevotes][%d] postOracleDenomsDenomPrevotesInternalServerError ", 500)
}

func (o *PostOracleDenomsDenomPrevotesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
