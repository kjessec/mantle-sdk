// Code generated by go-swagger; DO NOT EDIT.

package distribution

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/terra-project/mantle-sdk/lcd/models"
)

// GetDistributionValidatorsValidatorAddrReader is a Reader for the GetDistributionValidatorsValidatorAddr structure.
type GetDistributionValidatorsValidatorAddrReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDistributionValidatorsValidatorAddrReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetDistributionValidatorsValidatorAddrOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetDistributionValidatorsValidatorAddrBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetDistributionValidatorsValidatorAddrInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetDistributionValidatorsValidatorAddrOK creates a GetDistributionValidatorsValidatorAddrOK with default headers values
func NewGetDistributionValidatorsValidatorAddrOK() *GetDistributionValidatorsValidatorAddrOK {
	return &GetDistributionValidatorsValidatorAddrOK{}
}

/*GetDistributionValidatorsValidatorAddrOK handles this case with default header values.

OK
*/
type GetDistributionValidatorsValidatorAddrOK struct {
	Payload *GetDistributionValidatorsValidatorAddrOKBody
}

func (o *GetDistributionValidatorsValidatorAddrOK) Error() string {
	return fmt.Sprintf("[GET /distribution/validators/{validatorAddr}][%d] getDistributionValidatorsValidatorAddrOK  %+v", 200, o.Payload)
}

func (o *GetDistributionValidatorsValidatorAddrOK) GetPayload() *GetDistributionValidatorsValidatorAddrOKBody {
	return o.Payload
}

func (o *GetDistributionValidatorsValidatorAddrOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetDistributionValidatorsValidatorAddrOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDistributionValidatorsValidatorAddrBadRequest creates a GetDistributionValidatorsValidatorAddrBadRequest with default headers values
func NewGetDistributionValidatorsValidatorAddrBadRequest() *GetDistributionValidatorsValidatorAddrBadRequest {
	return &GetDistributionValidatorsValidatorAddrBadRequest{}
}

/*GetDistributionValidatorsValidatorAddrBadRequest handles this case with default header values.

Invalid validator address
*/
type GetDistributionValidatorsValidatorAddrBadRequest struct {
}

func (o *GetDistributionValidatorsValidatorAddrBadRequest) Error() string {
	return fmt.Sprintf("[GET /distribution/validators/{validatorAddr}][%d] getDistributionValidatorsValidatorAddrBadRequest ", 400)
}

func (o *GetDistributionValidatorsValidatorAddrBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetDistributionValidatorsValidatorAddrInternalServerError creates a GetDistributionValidatorsValidatorAddrInternalServerError with default headers values
func NewGetDistributionValidatorsValidatorAddrInternalServerError() *GetDistributionValidatorsValidatorAddrInternalServerError {
	return &GetDistributionValidatorsValidatorAddrInternalServerError{}
}

/*GetDistributionValidatorsValidatorAddrInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetDistributionValidatorsValidatorAddrInternalServerError struct {
}

func (o *GetDistributionValidatorsValidatorAddrInternalServerError) Error() string {
	return fmt.Sprintf("[GET /distribution/validators/{validatorAddr}][%d] getDistributionValidatorsValidatorAddrInternalServerError ", 500)
}

func (o *GetDistributionValidatorsValidatorAddrInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

/*GetDistributionValidatorsValidatorAddrOKBody get distribution validators validator addr o k body
swagger:model GetDistributionValidatorsValidatorAddrOKBody
*/
type GetDistributionValidatorsValidatorAddrOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *models.ValidatorDistInfo `json:"result,omitempty"`
}

// Validate validates this get distribution validators validator addr o k body
func (o *GetDistributionValidatorsValidatorAddrOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetDistributionValidatorsValidatorAddrOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getDistributionValidatorsValidatorAddrOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetDistributionValidatorsValidatorAddrOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetDistributionValidatorsValidatorAddrOKBody) UnmarshalBinary(b []byte) error {
	var res GetDistributionValidatorsValidatorAddrOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
