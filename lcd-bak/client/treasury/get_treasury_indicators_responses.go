// Code generated by go-swagger; DO NOT EDIT.

package treasury

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetTreasuryIndicatorsReader is a Reader for the GetTreasuryIndicators structure.
type GetTreasuryIndicatorsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTreasuryIndicatorsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTreasuryIndicatorsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTreasuryIndicatorsOK creates a GetTreasuryIndicatorsOK with default headers values
func NewGetTreasuryIndicatorsOK() *GetTreasuryIndicatorsOK {
	return &GetTreasuryIndicatorsOK{}
}

/*GetTreasuryIndicatorsOK handles this case with default header values.

Ok
*/
type GetTreasuryIndicatorsOK struct {
	Payload *GetTreasuryIndicatorsOKBody
}

func (o *GetTreasuryIndicatorsOK) Error() string {
	return fmt.Sprintf("[GET /treasury/indicators][%d] getTreasuryIndicatorsOK  %+v", 200, o.Payload)
}

func (o *GetTreasuryIndicatorsOK) GetPayload() *GetTreasuryIndicatorsOKBody {
	return o.Payload
}

func (o *GetTreasuryIndicatorsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTreasuryIndicatorsOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetTreasuryIndicatorsOKBody get treasury indicators o k body
swagger:model GetTreasuryIndicatorsOKBody
*/
type GetTreasuryIndicatorsOKBody struct {

	// height
	Height string `json:"height,omitempty"`

	// result
	Result *GetTreasuryIndicatorsOKBodyResult `json:"result,omitempty"`
}

// Validate validates this get treasury indicators o k body
func (o *GetTreasuryIndicatorsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateResult(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTreasuryIndicatorsOKBody) validateResult(formats strfmt.Registry) error {

	if swag.IsZero(o.Result) { // not required
		return nil
	}

	if o.Result != nil {
		if err := o.Result.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("getTreasuryIndicatorsOK" + "." + "result")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTreasuryIndicatorsOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTreasuryIndicatorsOKBody) UnmarshalBinary(b []byte) error {
	var res GetTreasuryIndicatorsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTreasuryIndicatorsOKBodyResult get treasury indicators o k body result
swagger:model GetTreasuryIndicatorsOKBodyResult
*/
type GetTreasuryIndicatorsOKBodyResult struct {

	// Tax Rewards per staked Luna over a month of rolling average
	TrlMonth string `json:"trl_month,omitempty"`

	// Tax Rewards per staked Luna over a year of rolling average
	TrlYear string `json:"trl_year,omitempty"`
}

// Validate validates this get treasury indicators o k body result
func (o *GetTreasuryIndicatorsOKBodyResult) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetTreasuryIndicatorsOKBodyResult) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTreasuryIndicatorsOKBodyResult) UnmarshalBinary(b []byte) error {
	var res GetTreasuryIndicatorsOKBodyResult
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
